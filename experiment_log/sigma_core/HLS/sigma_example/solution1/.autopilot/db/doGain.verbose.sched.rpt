

================================================================
== Vivado HLS Report for 'doGain'
================================================================
* Date:           Mon Dec  4 06:35:54 2017

* Version:        2015.4 (Build 1412921 on Wed Nov 18 09:58:55 AM 2015)
* Project:        sigma_example
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      5.42|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----------+-----------+-----------+-----------+---------+
    |        Latency        |        Interval       | Pipeline|
    |    min    |    max    |    min    |    max    |   Type  |
    +-----------+-----------+-----------+-----------+---------+
    |  100035004|  100035004|  100035005|  100035005|   none  |
    +-----------+-----------+-----------+-----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----------+-----------+----------+-----------+-----------+-------+----------+
        |          |        Latency        | Iteration|  Initiation Interval  |  Trip |          |
        | Loop Name|    min    |    max    |  Latency |  achieved |   target  | Count | Pipelined|
        +----------+-----------+-----------+----------+-----------+-----------+-------+----------+
        |- Loop 1  |      10000|      10000|         1|          1|          1|  10000|    yes   |
        |- Loop 2  |  100015000|  100015000|     20003|          -|          -|   5000|    no    |
        | + odd    |      10000|      10000|         2|          2|          1|   5000|    yes   |
        | + even   |       9998|       9998|         2|          2|          1|   4999|    yes   |
        |- Loop 3  |      10000|      10000|         2|          1|          1|  10000|    yes   |
        +----------+-----------+-----------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1
  * Pipeline-1: initiation interval (II) = 2, depth = 2
  * Pipeline-2: initiation interval (II) = 2, depth = 2
  * Pipeline-3: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 12
* Pipeline: 4
  Pipeline-0: II = 1, D = 1, States = { 2 }
  Pipeline-1: II = 2, D = 2, States = { 4 5 }
  Pipeline-2: II = 2, D = 2, States = { 7 8 }
  Pipeline-3: II = 1, D = 2, States = { 10 11 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (exitcond1)
	2  / (!exitcond1)
3 --> 
	10  / (exitcond2)
	4  / (!exitcond2)
4 --> 
	6  / (!tmp_8)
	5  / (tmp_8)
5 --> 
	4  / true
6 --> 
	7  / true
7 --> 
	9  / (!tmp_9_1)
	8  / (tmp_9_1)
8 --> 
	7  / true
9 --> 
	3  / true
10 --> 
	12  / (exitcond)
	11  / (!exitcond)
11 --> 
	10  / true
12 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_13 [1/1] 0.00ns
.preheader37.preheader:0  call void (...)* @_ssdm_op_SpecBitsMap(i32* %inStream_V_data_V), !map !7

ST_1: stg_14 [1/1] 0.00ns
.preheader37.preheader:1  call void (...)* @_ssdm_op_SpecBitsMap(i4* %inStream_V_keep_V), !map !11

ST_1: stg_15 [1/1] 0.00ns
.preheader37.preheader:2  call void (...)* @_ssdm_op_SpecBitsMap(i4* %inStream_V_strb_V), !map !15

ST_1: stg_16 [1/1] 0.00ns
.preheader37.preheader:3  call void (...)* @_ssdm_op_SpecBitsMap(i2* %inStream_V_user_V), !map !19

ST_1: stg_17 [1/1] 0.00ns
.preheader37.preheader:4  call void (...)* @_ssdm_op_SpecBitsMap(i1* %inStream_V_last_V), !map !23

ST_1: stg_18 [1/1] 0.00ns
.preheader37.preheader:5  call void (...)* @_ssdm_op_SpecBitsMap(i5* %inStream_V_id_V), !map !27

ST_1: stg_19 [1/1] 0.00ns
.preheader37.preheader:6  call void (...)* @_ssdm_op_SpecBitsMap(i6* %inStream_V_dest_V), !map !31

ST_1: stg_20 [1/1] 0.00ns
.preheader37.preheader:7  call void (...)* @_ssdm_op_SpecBitsMap(i32* %outStream_V_data_V), !map !35

ST_1: stg_21 [1/1] 0.00ns
.preheader37.preheader:8  call void (...)* @_ssdm_op_SpecBitsMap(i4* %outStream_V_keep_V), !map !39

ST_1: stg_22 [1/1] 0.00ns
.preheader37.preheader:9  call void (...)* @_ssdm_op_SpecBitsMap(i4* %outStream_V_strb_V), !map !43

ST_1: stg_23 [1/1] 0.00ns
.preheader37.preheader:10  call void (...)* @_ssdm_op_SpecBitsMap(i2* %outStream_V_user_V), !map !47

ST_1: stg_24 [1/1] 0.00ns
.preheader37.preheader:11  call void (...)* @_ssdm_op_SpecBitsMap(i1* %outStream_V_last_V), !map !51

ST_1: stg_25 [1/1] 0.00ns
.preheader37.preheader:12  call void (...)* @_ssdm_op_SpecBitsMap(i5* %outStream_V_id_V), !map !55

ST_1: stg_26 [1/1] 0.00ns
.preheader37.preheader:13  call void (...)* @_ssdm_op_SpecBitsMap(i6* %outStream_V_dest_V), !map !59

ST_1: stg_27 [1/1] 0.00ns
.preheader37.preheader:14  call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @doGain_str) nounwind

ST_1: valIn_data_V [1/1] 0.00ns
.preheader37.preheader:15  %valIn_data_V = alloca [10000 x i32], align 4

ST_1: valIn_keep_V [1/1] 0.00ns
.preheader37.preheader:16  %valIn_keep_V = alloca [10000 x i4], align 1

ST_1: valIn_strb_V [1/1] 0.00ns
.preheader37.preheader:17  %valIn_strb_V = alloca [10000 x i4], align 1

ST_1: valIn_user_V [1/1] 0.00ns
.preheader37.preheader:18  %valIn_user_V = alloca [10000 x i2], align 1

ST_1: valIn_last_V [1/1] 0.00ns
.preheader37.preheader:19  %valIn_last_V = alloca [10000 x i1], align 1

ST_1: valIn_id_V [1/1] 0.00ns
.preheader37.preheader:20  %valIn_id_V = alloca [10000 x i5], align 1

ST_1: valIn_dest_V [1/1] 0.00ns
.preheader37.preheader:21  %valIn_dest_V = alloca [10000 x i6], align 1

ST_1: stg_35 [1/1] 0.00ns
.preheader37.preheader:22  call void (...)* @_ssdm_op_SpecInterface(i32* %outStream_V_data_V, i4* %outStream_V_keep_V, i4* %outStream_V_strb_V, i2* %outStream_V_user_V, i1* %outStream_V_last_V, i5* %outStream_V_id_V, i6* %outStream_V_dest_V, [5 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_36 [1/1] 0.00ns
.preheader37.preheader:23  call void (...)* @_ssdm_op_SpecInterface(i32* %inStream_V_data_V, i4* %inStream_V_keep_V, i4* %inStream_V_strb_V, i2* %inStream_V_user_V, i1* %inStream_V_last_V, i5* %inStream_V_id_V, i6* %inStream_V_dest_V, [5 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_37 [1/1] 1.57ns
.preheader37.preheader:24  br label %.preheader37


 <State 2>: 3.78ns
ST_2: idx [1/1] 0.00ns
.preheader37:0  %idx = phi i14 [ %idx_1, %0 ], [ 0, %.preheader37.preheader ]

ST_2: exitcond1 [1/1] 2.21ns
.preheader37:1  %exitcond1 = icmp eq i14 %idx, -6384

ST_2: idx_1 [1/1] 1.96ns
.preheader37:2  %idx_1 = add i14 %idx, 1

ST_2: stg_41 [1/1] 1.57ns
.preheader37:3  br i1 %exitcond1, label %.preheader36.0, label %0

ST_2: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10000, i64 10000, i64 10000)

ST_2: tmp_1 [1/1] 0.00ns
:1  %tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str2)

ST_2: stg_44 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_2: tmp [1/1] 0.00ns
:3  %tmp = zext i14 %idx to i64

ST_2: empty_3 [1/1] 0.00ns
:4  %empty_3 = call { i32, i4, i4, i2, i1, i5, i6 } @_ssdm_op_Read.axis.volatile.i32P.i4P.i4P.i2P.i1P.i5P.i6P(i32* %inStream_V_data_V, i4* %inStream_V_keep_V, i4* %inStream_V_strb_V, i2* %inStream_V_user_V, i1* %inStream_V_last_V, i5* %inStream_V_id_V, i6* %inStream_V_dest_V)

ST_2: tmp_data_V [1/1] 0.00ns
:5  %tmp_data_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_3, 0

ST_2: tmp_keep_V [1/1] 0.00ns
:6  %tmp_keep_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_3, 1

ST_2: tmp_strb_V [1/1] 0.00ns
:7  %tmp_strb_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_3, 2

ST_2: tmp_user_V [1/1] 0.00ns
:8  %tmp_user_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_3, 3

ST_2: tmp_last_V [1/1] 0.00ns
:9  %tmp_last_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_3, 4

ST_2: tmp_id_V [1/1] 0.00ns
:10  %tmp_id_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_3, 5

ST_2: tmp_dest_V [1/1] 0.00ns
:11  %tmp_dest_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_3, 6

ST_2: valIn_data_V_addr [1/1] 0.00ns
:12  %valIn_data_V_addr = getelementptr [10000 x i32]* %valIn_data_V, i64 0, i64 %tmp

ST_2: stg_55 [1/1] 2.71ns
:13  store i32 %tmp_data_V, i32* %valIn_data_V_addr, align 4

ST_2: valIn_keep_V_addr [1/1] 0.00ns
:14  %valIn_keep_V_addr = getelementptr [10000 x i4]* %valIn_keep_V, i64 0, i64 %tmp

ST_2: stg_57 [1/1] 2.71ns
:15  store i4 %tmp_keep_V, i4* %valIn_keep_V_addr, align 4

ST_2: valIn_strb_V_addr [1/1] 0.00ns
:16  %valIn_strb_V_addr = getelementptr [10000 x i4]* %valIn_strb_V, i64 0, i64 %tmp

ST_2: stg_59 [1/1] 2.71ns
:17  store i4 %tmp_strb_V, i4* %valIn_strb_V_addr, align 1

ST_2: valIn_user_V_addr [1/1] 0.00ns
:18  %valIn_user_V_addr = getelementptr [10000 x i2]* %valIn_user_V, i64 0, i64 %tmp

ST_2: stg_61 [1/1] 2.71ns
:19  store i2 %tmp_user_V, i2* %valIn_user_V_addr, align 2

ST_2: valIn_last_V_addr [1/1] 0.00ns
:20  %valIn_last_V_addr = getelementptr [10000 x i1]* %valIn_last_V, i64 0, i64 %tmp

ST_2: stg_63 [1/1] 2.71ns
:21  store i1 %tmp_last_V, i1* %valIn_last_V_addr, align 1

ST_2: valIn_id_V_addr [1/1] 0.00ns
:22  %valIn_id_V_addr = getelementptr [10000 x i5]* %valIn_id_V, i64 0, i64 %tmp

ST_2: stg_65 [1/1] 2.71ns
:23  store i5 %tmp_id_V, i5* %valIn_id_V_addr, align 4

ST_2: valIn_dest_V_addr [1/1] 0.00ns
:24  %valIn_dest_V_addr = getelementptr [10000 x i6]* %valIn_dest_V, i64 0, i64 %tmp

ST_2: stg_67 [1/1] 2.71ns
:25  store i6 %tmp_dest_V, i6* %valIn_dest_V_addr, align 1

ST_2: empty_4 [1/1] 0.00ns
:26  %empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str2, i32 %tmp_1)

ST_2: stg_69 [1/1] 0.00ns
:27  br label %.preheader37


 <State 3>: 3.78ns
ST_3: stage1 [1/1] 0.00ns
.preheader36.0:0  %stage1 = phi i14 [ %stage_1, %.loopexit.loopexit1.1 ], [ 0, %.preheader37 ]

ST_3: exitcond2 [1/1] 2.21ns
.preheader36.0:1  %exitcond2 = icmp eq i14 %stage1, -6384

ST_3: stg_72 [1/1] 1.57ns
.preheader36.0:2  br i1 %exitcond2, label %.preheader, label %.preheader33.preheader.0

ST_3: empty_8 [1/1] 0.00ns
.preheader33.preheader.0:0  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5000, i64 5000, i64 5000)

ST_3: tmp_2 [1/1] 0.00ns
.preheader33.preheader.0:1  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str3)

ST_3: stg_75 [1/1] 1.57ns
.preheader33.preheader.0:2  br label %.preheader33.0


 <State 4>: 4.67ns
ST_4: i_1 [1/1] 0.00ns
.preheader33.0:0  %i_1 = phi i14 [ %i_2, %._crit_edge41.0 ], [ 1, %.preheader33.preheader.0 ]

ST_4: tmp_8 [1/1] 2.21ns
.preheader33.0:1  %tmp_8 = icmp ult i14 %i_1, -6384

ST_4: stg_78 [1/1] 0.00ns
.preheader33.0:2  br i1 %tmp_8, label %1, label %.loopexit.loopexit.0

ST_4: tmp_s [1/1] 0.00ns
:4  %tmp_s = zext i14 %i_1 to i64

ST_4: tmp_10 [1/1] 1.96ns
:5  %tmp_10 = add i14 %i_1, -1

ST_4: tmp_11 [1/1] 0.00ns
:6  %tmp_11 = zext i14 %tmp_10 to i64

ST_4: valIn_data_V_addr_2 [1/1] 0.00ns
:7  %valIn_data_V_addr_2 = getelementptr [10000 x i32]* %valIn_data_V, i64 0, i64 %tmp_s

ST_4: valIn_data_V_load [2/2] 2.71ns
:8  %valIn_data_V_load = load i32* %valIn_data_V_addr_2, align 4

ST_4: valIn_data_V_addr_3 [1/1] 0.00ns
:9  %valIn_data_V_addr_3 = getelementptr [10000 x i32]* %valIn_data_V, i64 0, i64 %tmp_11

ST_4: valIn_data_V_load_1 [2/2] 2.71ns
:10  %valIn_data_V_load_1 = load i32* %valIn_data_V_addr_3, align 4


 <State 5>: 5.42ns
ST_5: empty_7 [1/1] 0.00ns
:0  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5000, i64 5000, i64 5000)

ST_5: stg_87 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str5) nounwind

ST_5: tmp_4 [1/1] 0.00ns
:2  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str5)

ST_5: stg_89 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_5: valIn_data_V_load [1/2] 2.71ns
:8  %valIn_data_V_load = load i32* %valIn_data_V_addr_2, align 4

ST_5: valIn_data_V_load_1 [1/2] 2.71ns
:10  %valIn_data_V_load_1 = load i32* %valIn_data_V_addr_3, align 4

ST_5: tmp_6 [1/1] 2.52ns
:11  %tmp_6 = icmp slt i32 %valIn_data_V_load, %valIn_data_V_load_1

ST_5: stg_93 [1/1] 0.00ns
:12  br i1 %tmp_6, label %2, label %._crit_edge41.0

ST_5: stg_94 [1/1] 2.71ns
:0  store i32 %valIn_data_V_load_1, i32* %valIn_data_V_addr_2, align 4

ST_5: stg_95 [1/1] 2.71ns
:1  store i32 %valIn_data_V_load, i32* %valIn_data_V_addr_3, align 4

ST_5: stg_96 [1/1] 0.00ns
:2  br label %._crit_edge41.0

ST_5: empty_6 [1/1] 0.00ns
._crit_edge41.0:0  %empty_6 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str5, i32 %tmp_4)

ST_5: i_2 [1/1] 1.96ns
._crit_edge41.0:1  %i_2 = add i14 %i_1, 2

ST_5: stg_99 [1/1] 0.00ns
._crit_edge41.0:2  br label %.preheader33.0


 <State 6>: 1.57ns
ST_6: empty_5 [1/1] 0.00ns
.loopexit.loopexit.0:0  %empty_5 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str3, i32 %tmp_2)

ST_6: tmp_7 [1/1] 0.00ns
.loopexit.loopexit.0:1  %tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str3)

ST_6: stg_102 [1/1] 1.57ns
.loopexit.loopexit.0:2  br label %.preheader34.1


 <State 7>: 4.67ns
ST_7: i_s [1/1] 0.00ns
.preheader34.1:0  %i_s = phi i14 [ %i_3_1, %._crit_edge.1 ], [ 2, %.loopexit.loopexit.0 ]

ST_7: tmp_9_1 [1/1] 2.21ns
.preheader34.1:1  %tmp_9_1 = icmp ult i14 %i_s, -6384

ST_7: stg_105 [1/1] 0.00ns
.preheader34.1:2  br i1 %tmp_9_1, label %3, label %.loopexit.loopexit1.1

ST_7: tmp_7_1 [1/1] 0.00ns
:4  %tmp_7_1 = zext i14 %i_s to i64

ST_7: tmp_10_1 [1/1] 1.96ns
:5  %tmp_10_1 = add i14 %i_s, -1

ST_7: tmp_11_1 [1/1] 0.00ns
:6  %tmp_11_1 = zext i14 %tmp_10_1 to i64

ST_7: valIn_data_V_addr_4 [1/1] 0.00ns
:7  %valIn_data_V_addr_4 = getelementptr [10000 x i32]* %valIn_data_V, i64 0, i64 %tmp_7_1

ST_7: valIn_data_V_load_2 [2/2] 2.71ns
:8  %valIn_data_V_load_2 = load i32* %valIn_data_V_addr_4, align 8

ST_7: valIn_data_V_addr_5 [1/1] 0.00ns
:9  %valIn_data_V_addr_5 = getelementptr [10000 x i32]* %valIn_data_V, i64 0, i64 %tmp_11_1

ST_7: valIn_data_V_load_3 [2/2] 2.71ns
:10  %valIn_data_V_load_3 = load i32* %valIn_data_V_addr_5, align 4


 <State 8>: 5.42ns
ST_8: empty_11 [1/1] 0.00ns
:0  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4999, i64 4999, i64 4999)

ST_8: stg_114 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecLoopName([5 x i8]* @p_str4) nounwind

ST_8: tmp_9 [1/1] 0.00ns
:2  %tmp_9 = call i32 (...)* @_ssdm_op_SpecRegionBegin([5 x i8]* @p_str4)

ST_8: stg_116 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_8: valIn_data_V_load_2 [1/2] 2.71ns
:8  %valIn_data_V_load_2 = load i32* %valIn_data_V_addr_4, align 8

ST_8: valIn_data_V_load_3 [1/2] 2.71ns
:10  %valIn_data_V_load_3 = load i32* %valIn_data_V_addr_5, align 4

ST_8: tmp_12_1 [1/1] 2.52ns
:11  %tmp_12_1 = icmp slt i32 %valIn_data_V_load_2, %valIn_data_V_load_3

ST_8: stg_120 [1/1] 0.00ns
:12  br i1 %tmp_12_1, label %4, label %._crit_edge.1

ST_8: stg_121 [1/1] 2.71ns
:0  store i32 %valIn_data_V_load_3, i32* %valIn_data_V_addr_4, align 8

ST_8: stg_122 [1/1] 2.71ns
:1  store i32 %valIn_data_V_load_2, i32* %valIn_data_V_addr_5, align 4

ST_8: stg_123 [1/1] 0.00ns
:2  br label %._crit_edge.1

ST_8: empty_10 [1/1] 0.00ns
._crit_edge.1:0  %empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([5 x i8]* @p_str4, i32 %tmp_9)

ST_8: i_3_1 [1/1] 1.96ns
._crit_edge.1:1  %i_3_1 = add i14 %i_s, 2

ST_8: stg_126 [1/1] 0.00ns
._crit_edge.1:2  br label %.preheader34.1


 <State 9>: 1.96ns
ST_9: empty_9 [1/1] 0.00ns
.loopexit.loopexit1.1:0  %empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str3, i32 %tmp_7)

ST_9: stage_1 [1/1] 1.96ns
.loopexit.loopexit1.1:1  %stage_1 = add i14 %stage1, 2

ST_9: stg_129 [1/1] 0.00ns
.loopexit.loopexit1.1:2  br label %.preheader36.0


 <State 10>: 3.58ns
ST_10: idx2 [1/1] 0.00ns
.preheader:0  %idx2 = phi i14 [ %idx_2, %5 ], [ 0, %.preheader36.0 ]

ST_10: exitcond [1/1] 2.21ns
.preheader:1  %exitcond = icmp eq i14 %idx2, -6384

ST_10: idx_2 [1/1] 1.96ns
.preheader:2  %idx_2 = add i14 %idx2, 1

ST_10: stg_133 [1/1] 0.00ns
.preheader:3  br i1 %exitcond, label %6, label %5

ST_10: tmp_5 [1/1] 0.00ns
:3  %tmp_5 = zext i14 %idx2 to i64

ST_10: valIn_data_V_addr_1 [1/1] 0.00ns
:4  %valIn_data_V_addr_1 = getelementptr [10000 x i32]* %valIn_data_V, i64 0, i64 %tmp_5

ST_10: tmp_data_V_1 [2/2] 2.71ns
:5  %tmp_data_V_1 = load i32* %valIn_data_V_addr_1, align 4

ST_10: valIn_keep_V_addr_1 [1/1] 0.00ns
:6  %valIn_keep_V_addr_1 = getelementptr [10000 x i4]* %valIn_keep_V, i64 0, i64 %tmp_5

ST_10: tmp_keep_V_1 [2/2] 2.71ns
:7  %tmp_keep_V_1 = load i4* %valIn_keep_V_addr_1, align 4

ST_10: valIn_strb_V_addr_1 [1/1] 0.00ns
:8  %valIn_strb_V_addr_1 = getelementptr [10000 x i4]* %valIn_strb_V, i64 0, i64 %tmp_5

ST_10: tmp_strb_V_1 [2/2] 2.71ns
:9  %tmp_strb_V_1 = load i4* %valIn_strb_V_addr_1, align 1

ST_10: valIn_user_V_addr_1 [1/1] 0.00ns
:10  %valIn_user_V_addr_1 = getelementptr [10000 x i2]* %valIn_user_V, i64 0, i64 %tmp_5

ST_10: tmp_user_V_1 [2/2] 2.71ns
:11  %tmp_user_V_1 = load i2* %valIn_user_V_addr_1, align 2

ST_10: valIn_last_V_addr_1 [1/1] 0.00ns
:12  %valIn_last_V_addr_1 = getelementptr [10000 x i1]* %valIn_last_V, i64 0, i64 %tmp_5

ST_10: tmp_last_V_1 [2/2] 2.71ns
:13  %tmp_last_V_1 = load i1* %valIn_last_V_addr_1, align 1

ST_10: valIn_id_V_addr_1 [1/1] 0.00ns
:14  %valIn_id_V_addr_1 = getelementptr [10000 x i5]* %valIn_id_V, i64 0, i64 %tmp_5

ST_10: tmp_id_V_1 [2/2] 2.71ns
:15  %tmp_id_V_1 = load i5* %valIn_id_V_addr_1, align 4

ST_10: valIn_dest_V_addr_1 [1/1] 0.00ns
:16  %valIn_dest_V_addr_1 = getelementptr [10000 x i6]* %valIn_dest_V, i64 0, i64 %tmp_5

ST_10: tmp_dest_V_1 [2/2] 2.71ns
:17  %tmp_dest_V_1 = load i6* %valIn_dest_V_addr_1, align 1


 <State 11>: 2.71ns
ST_11: empty_12 [1/1] 0.00ns
:0  %empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10000, i64 10000, i64 10000)

ST_11: tmp_3 [1/1] 0.00ns
:1  %tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6)

ST_11: stg_151 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_11: tmp_data_V_1 [1/2] 2.71ns
:5  %tmp_data_V_1 = load i32* %valIn_data_V_addr_1, align 4

ST_11: tmp_keep_V_1 [1/2] 2.71ns
:7  %tmp_keep_V_1 = load i4* %valIn_keep_V_addr_1, align 4

ST_11: tmp_strb_V_1 [1/2] 2.71ns
:9  %tmp_strb_V_1 = load i4* %valIn_strb_V_addr_1, align 1

ST_11: tmp_user_V_1 [1/2] 2.71ns
:11  %tmp_user_V_1 = load i2* %valIn_user_V_addr_1, align 2

ST_11: tmp_last_V_1 [1/2] 2.71ns
:13  %tmp_last_V_1 = load i1* %valIn_last_V_addr_1, align 1

ST_11: tmp_id_V_1 [1/2] 2.71ns
:15  %tmp_id_V_1 = load i5* %valIn_id_V_addr_1, align 4

ST_11: tmp_dest_V_1 [1/2] 2.71ns
:17  %tmp_dest_V_1 = load i6* %valIn_dest_V_addr_1, align 1

ST_11: stg_159 [1/1] 0.00ns
:18  call void @_ssdm_op_Write.axis.volatile.i32P.i4P.i4P.i2P.i1P.i5P.i6P(i32* %outStream_V_data_V, i4* %outStream_V_keep_V, i4* %outStream_V_strb_V, i2* %outStream_V_user_V, i1* %outStream_V_last_V, i5* %outStream_V_id_V, i6* %outStream_V_dest_V, i32 %tmp_data_V_1, i4 %tmp_keep_V_1, i4 %tmp_strb_V_1, i2 %tmp_user_V_1, i1 %tmp_last_V_1, i5 %tmp_id_V_1, i6 %tmp_dest_V_1)

ST_11: empty_13 [1/1] 0.00ns
:19  %empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_3)

ST_11: stg_161 [1/1] 0.00ns
:20  br label %.preheader


 <State 12>: 0.00ns
ST_12: stg_162 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
